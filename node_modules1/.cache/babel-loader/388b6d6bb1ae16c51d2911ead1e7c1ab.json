{"ast":null,"code":"var _jsxFileName = \"D:\\\\Yaryna\\\\HebronSoft\\\\React\\\\practice\\\\notes-app\\\\src\\\\components\\\\Notes\\\\NotesButtons\\\\AddEditForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ReactTags from \"react-tag-autocomplete\";\nimport classes from \"../../../styles/Module/NotesButton.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEditForm = props => {\n  _s();\n\n  const titleInputRef = useRef(null);\n  const descriptionInputRef = useRef(null);\n  const tagsInputRef = useRef(null);\n  const reactTags = useRef(null);\n  let enteredTitle = \"\";\n  let enteredDescription = \"\";\n  let enteredTags = \"\";\n  let i = 0;\n  const tagsSuggestions = useSelector(state => state.tagsSlice.tags).map(item => {\n    return {\n      id: i++,\n      name: item\n    };\n  });\n  i = 0;\n  let tags = props.initialValues.tags.length === 0 ? [] : props.initialValues.tags.split(\",\").map(item => {\n    return {\n      id: i++,\n      name: item\n    };\n  });\n\n  const okHandler = () => {\n    var _titleInputRef$curren, _descriptionInputRef$, _tagsInputRef$current;\n\n    enteredTitle = ((_titleInputRef$curren = titleInputRef.current) === null || _titleInputRef$curren === void 0 ? void 0 : _titleInputRef$curren.value) || \"\";\n    enteredDescription = ((_descriptionInputRef$ = descriptionInputRef.current) === null || _descriptionInputRef$ === void 0 ? void 0 : _descriptionInputRef$.value) || \"\";\n    enteredTags = ((_tagsInputRef$current = tagsInputRef.current) === null || _tagsInputRef$current === void 0 ? void 0 : _tagsInputRef$current.value) || \"\";\n    enteredTags = tags.map(item => {\n      return item.name;\n    }).join();\n\n    if (enteredTitle.trim().length === 0) {\n      alert(\"Please, enter a valid note title!\");\n    } else if (enteredDescription.trim().length === 0) {\n      alert(\"Please, enter a valid note description!\");\n    } else if (enteredTags.trim().length === 0) {\n      alert(\"Please, enter a valid note tags!\");\n    } else {\n      props.saveNoteHandler({\n        title: enteredTitle,\n        description: enteredDescription,\n        tags: enteredTags\n      });\n    }\n  };\n\n  const onAdditionTag = tag => {\n    tags.push(tag);\n  };\n\n  const onDeleteTag = i => {\n    tags.splice(i, 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.title,\n      children: props.formTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.input,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        ref: titleInputRef,\n        defaultValue: props.initialValues.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.input,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        ref: descriptionInputRef,\n        defaultValue: props.initialValues.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.input,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tags\",\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactTags, {\n        style: {\n          width: \"auto\"\n        },\n        autoresize: false,\n        minQueryLength: 1,\n        allowNew: true,\n        addOnBlur: true,\n        ref: reactTags,\n        tags: tags,\n        suggestions: tagsSuggestions,\n        onDelete: onDeleteTag,\n        onAddition: onAdditionTag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.controlsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: okHandler,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.modalOnCloseHandle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEditForm, \"jRSX7rsp1m+w94C1C7sEU1Kvcms=\", false, function () {\n  return [useSelector];\n});\n\n_c = AddEditForm;\nexport default AddEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditForm\");","map":{"version":3,"names":["Fragment","useRef","useSelector","ReactTags","classes","AddEditForm","props","titleInputRef","descriptionInputRef","tagsInputRef","reactTags","enteredTitle","enteredDescription","enteredTags","i","tagsSuggestions","state","tagsSlice","tags","map","item","id","name","initialValues","length","split","okHandler","current","value","join","trim","alert","saveNoteHandler","title","description","onAdditionTag","tag","push","onDeleteTag","splice","formTitle","input","width","controlsContainer","modalOnCloseHandle"],"sources":["D:/Yaryna/HebronSoft/React/practice/notes-app/src/components/Notes/NotesButtons/AddEditForm.tsx"],"sourcesContent":["import { Fragment, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ReactTags from \"react-tag-autocomplete\";\r\n\r\nimport { InputNoteValues } from \"../../../types/NotesTypes\";\r\n\r\nimport classes from \"../../../styles/Module/NotesButton.module.css\";\r\n\r\nconst AddEditForm = (props: {\r\n  formTitle: string;\r\n  initialValues: InputNoteValues;\r\n  saveNoteHandler: (enteredValues: InputNoteValues) => void;\r\n  modalOnCloseHandle: () => void;\r\n}) => {\r\n  const titleInputRef = useRef<HTMLInputElement>(null);\r\n  const descriptionInputRef = useRef<HTMLTextAreaElement>(null);\r\n  const tagsInputRef = useRef<HTMLInputElement>(null);\r\n  const reactTags = useRef(null);\r\n\r\n  let enteredTitle = \"\";\r\n  let enteredDescription = \"\";\r\n  let enteredTags = \"\";\r\n\r\n  let i = 0;\r\n  const tagsSuggestions = useSelector((state: { tagsSlice: { tags: string[] } }) => state.tagsSlice.tags).map(\r\n    (item) => {\r\n      return { id: i++, name: item };\r\n    }\r\n  );\r\n\r\n  i = 0;\r\n  let tags =\r\n    props.initialValues.tags.length === 0\r\n      ? []\r\n      : props.initialValues.tags.split(\",\").map((item) => {\r\n          return { id: i++, name: item };\r\n        });\r\n\r\n  const okHandler = () => {\r\n    enteredTitle = titleInputRef.current?.value || \"\";\r\n    enteredDescription = descriptionInputRef.current?.value || \"\";\r\n    enteredTags = tagsInputRef.current?.value || \"\";\r\n    enteredTags = tags\r\n      .map((item) => {\r\n        return item.name;\r\n      })\r\n      .join();\r\n    if (enteredTitle.trim().length === 0) {\r\n      alert(\"Please, enter a valid note title!\");\r\n    } else if (enteredDescription.trim().length === 0) {\r\n      alert(\"Please, enter a valid note description!\");\r\n    } else if (enteredTags.trim().length === 0) {\r\n      alert(\"Please, enter a valid note tags!\");\r\n    } else {\r\n      props.saveNoteHandler({\r\n        title: enteredTitle,\r\n        description: enteredDescription,\r\n        tags: enteredTags,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onAdditionTag = (tag) => {\r\n    tags.push(tag);\r\n  };\r\n\r\n  const onDeleteTag = (i) => {\r\n    tags.splice(i, 1);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <p className={classes.title}>{props.formTitle}</p>\r\n      <div className={classes.input}>\r\n        <label htmlFor=\"title\">Title</label>\r\n        <input id=\"title\" ref={titleInputRef} defaultValue={props.initialValues.title}></input>\r\n      </div>\r\n      <div className={classes.input}>\r\n        <label htmlFor=\"description\">Description</label>\r\n        <textarea id=\"description\" ref={descriptionInputRef} defaultValue={props.initialValues.description}></textarea>\r\n      </div>\r\n      <div className={classes.input}>\r\n        <label htmlFor=\"tags\">Tags</label>\r\n        <ReactTags\r\n          style={{ width: \"auto\" }}\r\n          autoresize={false}\r\n          minQueryLength={1}\r\n          allowNew={true}\r\n          addOnBlur={true}\r\n          ref={reactTags}\r\n          tags={tags}\r\n          suggestions={tagsSuggestions}\r\n          onDelete={onDeleteTag}\r\n          onAddition={onAdditionTag}\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.controlsContainer}>\r\n        <button onClick={okHandler}>OK</button>\r\n        <button onClick={props.modalOnCloseHandle}>Cancel</button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddEditForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}