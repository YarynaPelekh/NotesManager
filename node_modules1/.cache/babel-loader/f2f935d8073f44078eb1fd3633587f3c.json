{"ast":null,"code":"var _jsxFileName = \"D:\\\\Yaryna\\\\HebronSoft\\\\React\\\\practice\\\\notes-app\\\\src\\\\components\\\\Folders\\\\DirectoriesTree.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DirectoryItem from \"./DirectoryItem\";\nimport { appStateActions } from \"../../store/app-state-slice\";\nimport { directoriesActions } from \"../../store/directories-slice\";\nimport { NotificationTypes } from \"../../types/NotificationTypes\";\nimport classes from \"../../styles/Module/DirectoriesTree.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRootId = arr => {\n  var _roots$;\n\n  const roots = arr.filter(item => !item.parentId);\n  return (_roots$ = roots[0]) === null || _roots$ === void 0 ? void 0 : _roots$.id;\n};\n\nconst DirectoriesTree = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const dataIsLoaded = useSelector(state => state.directoriesSlice.dataIsLoaded);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:3000/directories\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong! Fetching data from backend.\");\n      }\n\n      const responseData = await response.json();\n      dispatch(directoriesActions.loadDirectoriesTree(responseData));\n    };\n\n    if (!dataIsLoaded) {\n      fetchData().catch(error => {\n        console.log(\"fetching error\");\n        dispatch(appStateActions.setState({\n          showNotification: true,\n          notificationType: NotificationTypes.alertDanger,\n          notificationMessage: error.message\n        }));\n      });\n    }\n  }, [dataIsLoaded, dispatch]);\n  const directoriesData = useSelector(state => state.directoriesSlice.directories);\n  const rootId = String(getRootId(directoriesData));\n\n  const renderChildren = rootId => {\n    const arrayChildren = directoriesData.filter(item => item.parentId === rootId);\n    return arrayChildren.map(item => /*#__PURE__*/_jsxDEV(DirectoryItem, {\n      item: item,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.ul,\n        children: renderChildren(String(item.id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tree\",\n    className: classes.tree,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Directories Tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderChildren(rootId)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DirectoriesTree, \"gUNLaSNtwNsv0INd4uV0G1c1HxI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = DirectoriesTree;\nexport default DirectoriesTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"DirectoriesTree\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","DirectoryItem","appStateActions","directoriesActions","NotificationTypes","classes","getRootId","arr","roots","filter","item","parentId","id","DirectoriesTree","dispatch","dataIsLoaded","state","directoriesSlice","fetchData","response","fetch","ok","Error","responseData","json","loadDirectoriesTree","catch","error","console","log","setState","showNotification","notificationType","alertDanger","notificationMessage","message","directoriesData","directories","rootId","String","renderChildren","arrayChildren","map","ul","Math","random","tree"],"sources":["D:/Yaryna/HebronSoft/React/practice/notes-app/src/components/Folders/DirectoriesTree.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport DirectoryItem from \"./DirectoryItem\";\r\n\r\nimport { appStateActions } from \"../../store/app-state-slice\";\r\nimport { directoriesActions } from \"../../store/directories-slice\";\r\nimport { tagsActions } from \"../../store/tags-slice\";\r\n\r\nimport { NotificationTypes } from \"../../types/NotificationTypes\";\r\nimport { DirectoryType } from \"../../types/DirectoryTypes\";\r\n\r\nimport classes from \"../../styles/Module/DirectoriesTree.module.css\";\r\n\r\nconst getRootId = (arr: DirectoryType[]) => {\r\n  const roots = arr.filter((item) => !item.parentId);\r\n  return roots[0]?.id;\r\n};\r\n\r\nconst DirectoriesTree = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const dataIsLoaded = useSelector(\r\n    (state: { directoriesSlice: { dataIsLoaded: boolean } }) => state.directoriesSlice.dataIsLoaded\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\"http://localhost:3000/directories\");\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong! Fetching data from backend.\");\r\n      }\r\n      const responseData = await response.json();\r\n\r\n      dispatch(directoriesActions.loadDirectoriesTree(responseData));\r\n    };\r\n\r\n    if (!dataIsLoaded) {\r\n      fetchData().catch((error) => {\r\n        console.log(\"fetching error\");\r\n        dispatch(\r\n          appStateActions.setState({\r\n            showNotification: true,\r\n            notificationType: NotificationTypes.alertDanger,\r\n            notificationMessage: error.message,\r\n          })\r\n        );\r\n      });\r\n    }\r\n  }, [dataIsLoaded, dispatch]);\r\n\r\n  const directoriesData = useSelector(\r\n    (state: { directoriesSlice: { directories: DirectoryType[] } }) => state.directoriesSlice.directories\r\n  ) as DirectoryType[];\r\n\r\n  const rootId = String(getRootId(directoriesData));\r\n\r\n  const renderChildren = (rootId: string) => {\r\n    const arrayChildren = directoriesData.filter((item) => item.parentId === rootId) as DirectoryType[];\r\n\r\n    return arrayChildren.map((item) => (\r\n      <DirectoryItem item={item} key={Math.random()}>\r\n        <ul className={classes.ul}>{renderChildren(String(item.id))}</ul>\r\n      </DirectoryItem>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div id=\"tree\" className={classes.tree}>\r\n      <p> Directories Tree</p>\r\n      <div>{renderChildren(rootId)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectoriesTree;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AAGA,SAASC,iBAAT,QAAkC,+BAAlC;AAGA,OAAOC,OAAP,MAAoB,gDAApB;;;AAEA,MAAMC,SAAS,GAAIC,GAAD,IAA0B;EAAA;;EAC1C,MAAMC,KAAK,GAAGD,GAAG,CAACE,MAAJ,CAAYC,IAAD,IAAU,CAACA,IAAI,CAACC,QAA3B,CAAd;EACA,kBAAOH,KAAK,CAAC,CAAD,CAAZ,4CAAO,QAAUI,EAAjB;AACD,CAHD;;AAKA,MAAMC,eAAe,GAAG,MAAM;EAAA;;EAC5B,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;EAEA,MAAMgB,YAAY,GAAGf,WAAW,CAC7BgB,KAAD,IAA4DA,KAAK,CAACC,gBAAN,CAAuBF,YADrD,CAAhC;EAIAjB,SAAS,CAAC,MAAM;IACd,MAAMoB,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAA5B;;MAEA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;MACD;;MACD,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;MAEAV,QAAQ,CAACX,kBAAkB,CAACsB,mBAAnB,CAAuCF,YAAvC,CAAD,CAAR;IACD,CATD;;IAWA,IAAI,CAACR,YAAL,EAAmB;MACjBG,SAAS,GAAGQ,KAAZ,CAAmBC,KAAD,IAAW;QAC3BC,OAAO,CAACC,GAAR,CAAY,gBAAZ;QACAf,QAAQ,CACNZ,eAAe,CAAC4B,QAAhB,CAAyB;UACvBC,gBAAgB,EAAE,IADK;UAEvBC,gBAAgB,EAAE5B,iBAAiB,CAAC6B,WAFb;UAGvBC,mBAAmB,EAAEP,KAAK,CAACQ;QAHJ,CAAzB,CADM,CAAR;MAOD,CATD;IAUD;EACF,CAxBQ,EAwBN,CAACpB,YAAD,EAAeD,QAAf,CAxBM,CAAT;EA0BA,MAAMsB,eAAe,GAAGpC,WAAW,CAChCgB,KAAD,IAAmEA,KAAK,CAACC,gBAAN,CAAuBoB,WADzD,CAAnC;EAIA,MAAMC,MAAM,GAAGC,MAAM,CAACjC,SAAS,CAAC8B,eAAD,CAAV,CAArB;;EAEA,MAAMI,cAAc,GAAIF,MAAD,IAAoB;IACzC,MAAMG,aAAa,GAAGL,eAAe,CAAC3B,MAAhB,CAAwBC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkB2B,MAAnD,CAAtB;IAEA,OAAOG,aAAa,CAACC,GAAd,CAAmBhC,IAAD,iBACvB,QAAC,aAAD;MAAe,IAAI,EAAEA,IAArB;MAAA,uBACE;QAAI,SAAS,EAAEL,OAAO,CAACsC,EAAvB;QAAA,UAA4BH,cAAc,CAACD,MAAM,CAAC7B,IAAI,CAACE,EAAN,CAAP;MAA1C;QAAA;QAAA;QAAA;MAAA;IADF,GAAgCgC,IAAI,CAACC,MAAL,EAAhC;MAAA;MAAA;MAAA;IAAA,QADK,CAAP;EAKD,CARD;;EAUA,oBACE;IAAK,EAAE,EAAC,MAAR;IAAe,SAAS,EAAExC,OAAO,CAACyC,IAAlC;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAMN,cAAc,CAACF,MAAD;IAApB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAvDD;;GAAMzB,e;UACad,W,EAEIC,W,EA8BGA,W;;;KAjCpBa,e;AAyDN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}