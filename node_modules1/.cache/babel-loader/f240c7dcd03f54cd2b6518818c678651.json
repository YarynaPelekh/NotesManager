{"ast":null,"code":"var _jsxFileName = \"D:\\\\Yaryna\\\\HebronSoft\\\\React\\\\practice\\\\notes-app\\\\src\\\\components\\\\Notes\\\\Search\\\\SearchResults.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport NotesList from \"../NotesList\";\nimport PageHeader from \"../../UI/Layout/PageHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import classes from \"../../../styles/Module/SearchResults.module.css\";\nfunction useQuery() {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\n_s(useQuery, \"I+9F+Vhfmc3otMLqUKFlYflxhf8=\", false, function () {\n  return [useLocation];\n});\n\nconst SearchResults = () => {\n  _s2();\n\n  let searchNotesResult = [];\n  const searchParams = useQuery().get(\"mode\");\n  const mode = searchParams === null || searchParams === void 0 ? void 0 : searchParams.slice(0, searchParams.indexOf(\"%\"));\n  const values = searchParams === null || searchParams === void 0 ? void 0 : searchParams.slice(searchParams.indexOf(\"%\") + 1);\n  let notesList = [...useSelector(state => state.notesSlice.notes)]; // const searchValues = [\n  //   ...(useSelector(\n  //     (state: { searchSlice: { searchValues: string[] } }) => state.searchSlice.searchValues\n  //   ) as string[]),\n  // ];\n  // const searchModeAdvanced = useSelector(\n  //   (state: { searchSlice: { advancedSearchMode: boolean } }) => state.searchSlice.advancedSearchMode\n  // ) as boolean;\n\n  const searchModeAdvanced = mode === \"advanced\" ? true : false;\n  const searchValues = (values === null || values === void 0 ? void 0 : values.split(\",\")) || [];\n  console.log(searchValues);\n  console.log(notesList);\n  console.log(searchNotesResult);\n\n  for (let searchValue of searchValues) {\n    searchNotesResult = [...searchNotesResult, ...notesList.filter(item => item.title.includes(searchValue))];\n\n    if (searchModeAdvanced) {\n      searchNotesResult = [...searchNotesResult, ...notesList.filter(item => item.description.includes(searchValue))];\n      searchNotesResult = [...searchNotesResult, ...notesList.filter(item => item.tags.includes(searchValue))];\n    }\n\n    searchNotesResult = [...searchNotesResult.filter((v, i, a) => a.indexOf(v) === i)];\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      header: \"Search results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      notes: searchNotesResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SearchResults, \"QVEeQISsa+xMbxuwWTk1DTLxINk=\", false, function () {\n  return [useQuery, useSelector];\n});\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","Fragment","useSelector","useLocation","NotesList","PageHeader","useQuery","search","useMemo","URLSearchParams","SearchResults","searchNotesResult","searchParams","get","mode","slice","indexOf","values","notesList","state","notesSlice","notes","searchModeAdvanced","searchValues","split","console","log","searchValue","filter","item","title","includes","description","tags","v","i","a"],"sources":["D:/Yaryna/HebronSoft/React/practice/notes-app/src/components/Notes/Search/SearchResults.tsx"],"sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport NotesList from \"../NotesList\";\r\nimport PageHeader from \"../../UI/Layout/PageHeader\";\r\n\r\nimport { NoteType } from \"../../../types/NotesTypes\";\r\n\r\n// import classes from \"../../../styles/Module/SearchResults.module.css\";\r\n\r\nfunction useQuery() {\r\n  const { search } = useLocation();\r\n\r\n  return React.useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n\r\nconst SearchResults = () => {\r\n  let searchNotesResult: NoteType[] = [];\r\n\r\n  const searchParams = useQuery().get(\"mode\");\r\n  const mode = searchParams?.slice(0, searchParams.indexOf(\"%\"));\r\n  const values = searchParams?.slice(searchParams.indexOf(\"%\") + 1);\r\n\r\n  let notesList = [\r\n    ...(useSelector((state: { notesSlice: { notes: NoteType[] } }) => state.notesSlice.notes) as NoteType[]),\r\n  ];\r\n\r\n  // const searchValues = [\r\n  //   ...(useSelector(\r\n  //     (state: { searchSlice: { searchValues: string[] } }) => state.searchSlice.searchValues\r\n  //   ) as string[]),\r\n  // ];\r\n  // const searchModeAdvanced = useSelector(\r\n  //   (state: { searchSlice: { advancedSearchMode: boolean } }) => state.searchSlice.advancedSearchMode\r\n  // ) as boolean;\r\n\r\n  const searchModeAdvanced = mode === \"advanced\" ? true : false;\r\n  const searchValues = values?.split(\",\") || [];\r\n  console.log(searchValues);\r\n  console.log(notesList);\r\n  console.log(searchNotesResult);\r\n\r\n  for (let searchValue of searchValues) {\r\n    searchNotesResult = [\r\n      ...searchNotesResult,\r\n      ...notesList.filter((item: NoteType) => item.title.includes(searchValue)),\r\n    ];\r\n    if (searchModeAdvanced) {\r\n      searchNotesResult = [\r\n        ...searchNotesResult,\r\n        ...notesList.filter((item: NoteType) => item.description.includes(searchValue)),\r\n      ];\r\n      searchNotesResult = [\r\n        ...searchNotesResult,\r\n        ...notesList.filter((item: NoteType) => item.tags.includes(searchValue)),\r\n      ];\r\n    }\r\n    searchNotesResult = [...searchNotesResult.filter((v, i, a) => a.indexOf(v) === i)];\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageHeader header=\"Search results\" />\r\n      <NotesList notes={searchNotesResult} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}