{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst searchSlice = createSlice({\n  name: \"searchSlice\",\n  initialState: {\n    searchValues: [],\n    advancedSearchMode: false\n  },\n  reducers: {\n    storeSearchValues(state, action) {\n      state.searchValues = [...action.payload];\n    },\n\n    setAdvancedSearchMode(state, action) {\n      state.advancedSearchMode = action.payload;\n    }\n\n  }\n});\nexport const searchActions = searchSlice.actions;\nexport default searchSlice;","map":{"version":3,"names":["createSlice","searchSlice","name","initialState","searchValues","advancedSearchMode","reducers","storeSearchValues","state","action","payload","setAdvancedSearchMode","searchActions","actions"],"sources":["D:/Yaryna/HebronSoft/React/practice/notes-app/src/store/search-slice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst searchSlice = createSlice({\r\n  name: \"searchSlice\",\r\n  initialState: {\r\n    searchValues: [] as string[],\r\n    advancedSearchMode: false,\r\n  },\r\n  reducers: {\r\n    storeSearchValues(state, action) {\r\n      state.searchValues = [...action.payload];\r\n    },\r\n    setAdvancedSearchMode(state, action) {\r\n      state.advancedSearchMode = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const searchActions = searchSlice.actions;\r\n\r\nexport default searchSlice;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAE,aADwB;EAE9BC,YAAY,EAAE;IACZC,YAAY,EAAE,EADF;IAEZC,kBAAkB,EAAE;EAFR,CAFgB;EAM9BC,QAAQ,EAAE;IACRC,iBAAiB,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAC/BD,KAAK,CAACJ,YAAN,GAAqB,CAAC,GAAGK,MAAM,CAACC,OAAX,CAArB;IACD,CAHO;;IAIRC,qBAAqB,CAACH,KAAD,EAAQC,MAAR,EAAgB;MACnCD,KAAK,CAACH,kBAAN,GAA2BI,MAAM,CAACC,OAAlC;IACD;;EANO;AANoB,CAAD,CAA/B;AAgBA,OAAO,MAAME,aAAa,GAAGX,WAAW,CAACY,OAAlC;AAEP,eAAeZ,WAAf"},"metadata":{},"sourceType":"module"}