{"ast":null,"code":"var _jsxFileName = \"D:\\\\Yaryna\\\\HebronSoft\\\\React\\\\practice\\\\notes-app\\\\src\\\\components\\\\Notes\\\\NoteDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport PageHeader from \"../UI/Layout/PageHeader.tsx\";\nimport { notesActions } from \"../../store/notes-slice\";\nimport classes from \"../../styles/Module/NoteDetails.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteDetails = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const params = useParams();\n  const chosenNoteId = useSelector(state => state.notesSlice.chosenNoteId);\n  const chosenNote = useSelector(state => state.notesSlice.notes).filter(item => item.id === +chosenNoteId)[0];\n  useEffect(() => {\n    if (params.noteId) {\n      dispatch(notesActions.setChosenNoteId(params.noteId));\n    }\n  }, [dispatch, params.noteId]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      header: \"Note details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), chosenNote && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.output,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"title\",\n          children: chosenNote.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.output,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"description\",\n          children: chosenNote.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.output,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tags\",\n          children: \"Tags:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"tags\",\n          children: chosenNote.tags\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteDetails, \"g+mMXxqzZbvKTD8D/OrCRMNv080=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector];\n});\n\n_c = NoteDetails;\nexport default NoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteDetails\");","map":{"version":3,"names":["Fragment","useEffect","useSelector","useDispatch","useParams","PageHeader","notesActions","classes","NoteDetails","dispatch","params","chosenNoteId","state","notesSlice","chosenNote","notes","filter","item","id","noteId","setChosenNoteId","container","output","title","description","tags"],"sources":["D:/Yaryna/HebronSoft/React/practice/notes-app/src/components/Notes/NoteDetails.tsx"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport PageHeader from \"../UI/Layout/PageHeader.tsx\";\r\n\r\nimport { notesActions } from \"../../store/notes-slice\";\r\nimport { NoteType } from \"../../types/NotesTypes\";\r\n\r\nimport classes from \"../../styles/Module/NoteDetails.module.css\";\r\n\r\nconst NoteDetails = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n\r\n  const chosenNoteId = useSelector((state: { notesSlice: { chosenNoteId: number } }) => state.notesSlice.chosenNoteId);\r\n  const chosenNote = useSelector((state: { notesSlice: { notes: NoteType[] } }) => state.notesSlice.notes).filter(\r\n    (item: NoteType) => item.id === +chosenNoteId\r\n  )[0];\r\n\r\n  useEffect(() => {\r\n    if (params.noteId) {\r\n      dispatch(notesActions.setChosenNoteId(params.noteId));\r\n    }\r\n  }, [dispatch, params.noteId]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageHeader header=\"Note details\" />\r\n      {chosenNote && (\r\n        <div className={classes.container}>\r\n          <div className={classes.output}>\r\n            <label htmlFor=\"title\">Title:</label>\r\n            <p id=\"title\">{chosenNote.title}</p>\r\n          </div>\r\n          <div className={classes.output}>\r\n            <label htmlFor=\"description\">Description:</label>\r\n            <p id=\"description\">{chosenNote.description}</p>\r\n          </div>\r\n          <div className={classes.output}>\r\n            <label htmlFor=\"tags\">Tags:</label>\r\n            <p id=\"tags\">{chosenNote.tags}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NoteDetails;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAAsBC,SAAtB,QAAuC,kBAAvC;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,SAASC,YAAT,QAA6B,yBAA7B;AAGA,OAAOC,OAAP,MAAoB,4CAApB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAMO,MAAM,GAAGN,SAAS,EAAxB;EAEA,MAAMO,YAAY,GAAGT,WAAW,CAAEU,KAAD,IAAqDA,KAAK,CAACC,UAAN,CAAiBF,YAAvE,CAAhC;EACA,MAAMG,UAAU,GAAGZ,WAAW,CAAEU,KAAD,IAAkDA,KAAK,CAACC,UAAN,CAAiBE,KAApE,CAAX,CAAsFC,MAAtF,CAChBC,IAAD,IAAoBA,IAAI,CAACC,EAAL,KAAY,CAACP,YADhB,EAEjB,CAFiB,CAAnB;EAIAV,SAAS,CAAC,MAAM;IACd,IAAIS,MAAM,CAACS,MAAX,EAAmB;MACjBV,QAAQ,CAACH,YAAY,CAACc,eAAb,CAA6BV,MAAM,CAACS,MAApC,CAAD,CAAR;IACD;EACF,CAJQ,EAIN,CAACV,QAAD,EAAWC,MAAM,CAACS,MAAlB,CAJM,CAAT;EAMA,oBACE,QAAC,QAAD;IAAA,wBACE,QAAC,UAAD;MAAY,MAAM,EAAC;IAAnB;MAAA;MAAA;MAAA;IAAA,QADF,EAEGL,UAAU,iBACT;MAAK,SAAS,EAAEP,OAAO,CAACc,SAAxB;MAAA,wBACE;QAAK,SAAS,EAAEd,OAAO,CAACe,MAAxB;QAAA,wBACE;UAAO,OAAO,EAAC,OAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAG,EAAE,EAAC,OAAN;UAAA,UAAeR,UAAU,CAACS;QAA1B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAK,SAAS,EAAEhB,OAAO,CAACe,MAAxB;QAAA,wBACE;UAAO,OAAO,EAAC,aAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAG,EAAE,EAAC,aAAN;UAAA,UAAqBR,UAAU,CAACU;QAAhC;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eASE;QAAK,SAAS,EAAEjB,OAAO,CAACe,MAAxB;QAAA,wBACE;UAAO,OAAO,EAAC,MAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAG,EAAE,EAAC,MAAN;UAAA,UAAcR,UAAU,CAACW;QAAzB;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CApCD;;GAAMjB,W;UACaL,W,EACFC,S,EAEMF,W,EACFA,W;;;KALfM,W;AAsCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}